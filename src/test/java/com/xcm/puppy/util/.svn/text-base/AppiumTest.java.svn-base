package com.xcm.puppy.util;

import java.io.File;
import java.net.URL;

import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Optional;
import org.testng.annotations.Parameters;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.ios.IOSDriver;

public class AppiumTest {
	private String driverType = GlobalSettings.driverType;
	private String remoteAddress = GlobalSettings.remoteAddress;
	private String apkPath = GlobalSettings.apkPath;
	private String ipaPath = GlobalSettings.ipaPath;

	private String platformName = GlobalSettings.platformName;
	private String platformVersion = GlobalSettings.platformVersion;
	private String deviceName = GlobalSettings.deviceName;
	private String udid = GlobalSettings.udid;
	private String bundleId = GlobalSettings.bundleId;
	private String appActivity = GlobalSettings.appActivity;
	private String appPackage = GlobalSettings.appPackage;
	
	public AppiumDriver<WebElement> driver;
	public Selenium selenium;

	@Parameters({ "driver-type", "remote-address", "apk-path", "ipa-path", "platform-name", "platform-version", "device-name", "udid", "bundle-id", "app-activity","app-package" })
	@BeforeTest(alwaysRun = true, description = "Initialize AppiumDriver")
	public void setUp(@Optional String driverType, @Optional String remoteAddress, @Optional String apkPath,
			@Optional String ipaPath, @Optional String platformName, @Optional String platformVersion,
			@Optional String deviceName, @Optional String udid, @Optional String bundleId, @Optional String appActivity, @Optional String appPackage) throws Exception {
		
		String pkg = System.getProperty("appPackage");
		if ("${appPackage}".equals(pkg) || null == pkg || "".equals(pkg)) {
			pkg = appPackage;
			if (null == pkg) {
				pkg = this.appPackage;
			}
		}
		
		String activity = System.getProperty("appActivity");
		if ("${appActivity}".equals(activity) || null == activity || "".equals(activity)) {
			activity = appActivity;
			if (null == activity) {
				activity = this.appActivity;
			}
		}
		
		String bundle = System.getProperty("bundleId");
		if ("${bundleId}".equals(bundle) || null == bundle || "".equals(bundle)) {
			bundle = bundleId;
			if (null == bundle) {
				bundle = this.bundleId;
			}
		}
		
		String id = System.getProperty("udid");
		if ("${udid}".equals(id) || null == id || "".equals(id)) {
			id = udid;
			if (null == id) {
				id = this.udid;
			}
		}

		String dName = System.getProperty("deviceName");
		if ("${platformName}".equals(dName) || null == dName || "".equals(dName)) {
			dName = deviceName;
			if (null == dName) {
				dName = this.deviceName;
			}
		}
		
		String pName = System.getProperty("platformName");
		if ("${platformName}".equals(pName) || null == pName || "".equals(pName)) {
			pName = platformName;
			if (null == pName) {
				pName = this.platformName;
			}
		}

		String version = System.getProperty("platformVersion");
		if ("${platformVersion}".equals(version) || null == version || "".equals(version)) {
			version = platformVersion;
			if (null == version) {
				version = this.platformVersion;
			}
		}

		String type = System.getProperty("driverType");
		if ("${driverType}".equals(type) || null == type || "".equals(type)) {
			type = driverType;
			if (null == type) {
				type = this.driverType;
			}
		}

		String address = System.getProperty("remoteAddress");
		if ("${remoteAddress}".equals(address) || null == address || "".equals(address)) {
			address = remoteAddress;
			if (null == address) {
				address = this.remoteAddress;
			}
		}

		String aPath = System.getProperty("apkPath");
		if ("${apkPath}".equals(aPath) || null == aPath || "".equals(aPath)) {
			aPath = apkPath;
			if (null == aPath) {
				aPath = this.apkPath;
			}
		}

		String iPath = System.getProperty("ipaPath");
		if ("${ipaPath}".equals(iPath) || null == iPath || "".equals(iPath)) {
			iPath = ipaPath;
			if (null == iPath) {
				iPath = this.ipaPath;
			}
		}

		if ("Android".equals(type)) {
			DesiredCapabilities desiredCapabilities = new DesiredCapabilities();
			desiredCapabilities.setCapability("platformName", pName);
			desiredCapabilities.setCapability("platformVersion", version);
			desiredCapabilities.setCapability("deviceName", dName);
			desiredCapabilities.setCapability("newCommandTimeout", "120");

			File appDir = new File(aPath);
			desiredCapabilities.setCapability("app", appDir.getAbsolutePath());
			desiredCapabilities.setCapability("appPackage", pkg);
			desiredCapabilities.setCapability("appActivity", activity);

			driver = new AndroidDriver<WebElement>(new URL(address), desiredCapabilities);

			// System.out.println("Hello Appium");
		} else if ("IOS".equals(type)) {
			DesiredCapabilities desiredCapabilities = new DesiredCapabilities();
			desiredCapabilities.setCapability("platformName", pName);
			desiredCapabilities.setCapability("platformVersion", version);
			desiredCapabilities.setCapability("deviceName", dName);
			desiredCapabilities.setCapability("newCommandTimeout", "120");

			File appDir = new File(iPath);
			desiredCapabilities.setCapability("app", appDir.getAbsolutePath());

			driver = new IOSDriver<WebElement>(new URL(address), desiredCapabilities);

		}

		selenium = new Selenium(driver);

	}

	@AfterTest(alwaysRun = true)
	public void tearDown() {
		driver.quit();
	}

}
